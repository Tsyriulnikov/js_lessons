[{"D:\\it-incubator\\js_lessons\\src\\index.tsx":"1","D:\\it-incubator\\js_lessons\\src\\components\\CurrencyExchange\\CurrencyExchange.tsx":"2","D:\\it-incubator\\js_lessons\\src\\redux\\actions.ts":"3","D:\\it-incubator\\js_lessons\\src\\containers\\CurrencyExchangeContainer\\CurrencyEContainer.tsx":"4","D:\\it-incubator\\js_lessons\\src\\App.tsx":"5","D:\\it-incubator\\js_lessons\\src\\redux\\currencyReducer.ts":"6","D:\\it-incubator\\js_lessons\\src\\redux\\state.ts":"7","D:\\it-incubator\\js_lessons\\src\\redux\\selectors.ts":"8","D:\\it-incubator\\js_lessons\\src\\lessons\\lesson2\\lesson2.ts":"9","D:\\it-incubator\\js_lessons\\src\\lessons\\lesson1\\lesson1.tsx":"10"},{"size":319,"mtime":1609752860000,"results":"11","hashOfConfig":"12"},{"size":3871,"mtime":1609757734000,"results":"13","hashOfConfig":"12"},{"size":1264,"mtime":1651319325908,"results":"14","hashOfConfig":"12"},{"size":6428,"mtime":1624783786000,"results":"15","hashOfConfig":"12"},{"size":616,"mtime":1651748758029,"results":"16","hashOfConfig":"12"},{"size":1681,"mtime":1651323080673,"results":"17","hashOfConfig":"12"},{"size":286,"mtime":1609751766000,"results":"18","hashOfConfig":"12"},{"size":618,"mtime":1624783786000,"results":"19","hashOfConfig":"12"},{"size":5250,"mtime":1651814138749,"results":"20","hashOfConfig":"12"},{"size":860,"mtime":1609756876000,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1gc1tii",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\it-incubator\\js_lessons\\src\\index.tsx",[],["45","46"],"D:\\it-incubator\\js_lessons\\src\\components\\CurrencyExchange\\CurrencyExchange.tsx",[],"D:\\it-incubator\\js_lessons\\src\\redux\\actions.ts",["47"],"import {type} from \"os\";\r\n\r\nexport enum ACTIONS_TYPE {\r\n    CHANGE_CURRENCY_FIELD_TYPE = 'CurrencyExchange/CHANGE_CURRENCY_FIELD_TYPE',\r\n    CHANGE_CHANGE_ACTION = 'CurrencyExchange/CHANGE_CHANGE_ACTION',\r\n    CHANGE_CURRENT_CURRENCY = 'CurrencyExchange/CHANGE_CURRENT_CURRENCY',\r\n}\r\n\r\n\r\nexport type ChangeCurrencyFieldType = ReturnType<typeof ChangeCurrencyFieldAC>\r\n\r\nexport const ChangeCurrencyFieldAC = (amountOfBYN: string, amountOfCurrency: string) => {\r\n    return {\r\n        type: ACTIONS_TYPE.CHANGE_CURRENCY_FIELD_TYPE,\r\n        payload: {\r\n            amountOfBYN, amountOfCurrency,\r\n        },\r\n    } as const\r\n};\r\n\r\nexport type ChangeAction = ReturnType<typeof ChangeActionAC>;\r\n\r\nexport const ChangeActionAC = (isBuying: boolean) => {\r\n return {\r\n     type: ACTIONS_TYPE.CHANGE_CHANGE_ACTION,\r\n     payload:\r\n    {\r\n        isBuying,\r\n    },\r\n} as const\r\n};\r\n\r\nexport type ChangeCurrentCurrencyType = ReturnType<typeof СhangeCurrentCurrencyAC>;\r\n\r\n\r\nexport const СhangeCurrentCurrencyAC = (currentCurrency: string) => {\r\nreturn {\r\n    type:ACTIONS_TYPE.CHANGE_CURRENT_CURRENCY,\r\n    payload:{\r\n        currentCurrency,\r\n    },\r\n}as const\r\n};\r\n\r\nexport type CurrencyReducersTypes = ChangeCurrencyFieldType | ChangeAction | ChangeCurrentCurrencyType;","D:\\it-incubator\\js_lessons\\src\\containers\\CurrencyExchangeContainer\\CurrencyEContainer.tsx",["48","49","50","51","52","53","54","55"],"import React from 'react';\r\nimport CurrencyExchange from '../../components/CurrencyExchange/CurrencyExchange';\r\nimport { CurrencyState, CurrencyType } from '../../redux/currencyReducer';\r\nimport { Dispatch } from 'redux';\r\nimport {\r\n    ChangeActionAC,\r\n    ChangeCurrencyFieldAC,\r\n    ChangeCurrentCurrencyAC,\r\n    CurrencyReducersTypes\r\n} from '../../redux/actions';\r\nimport { connect, ConnectedProps, useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    selectAllStateValues,\r\n    selectAmountOfBYN,\r\n    selectAmountOfCurrency,\r\n    selectCurrencies,\r\n    selectCurrentCurrency,\r\n    selectIsBuying\r\n} from '../../redux/selectors';\r\n\r\n\r\n// const CurrencyEContainer: React.FC<TProps> = props => {\r\n\r\n// const {\r\n//     currencies,\r\n//     currentCurrency,\r\n//     isBuying,\r\n//     amountOfBYN,\r\n//     amountOfCurrency,\r\n//     setCurrencyAmount,\r\n//     setAction,\r\n//     changeCurrency,\r\n// } = props;\r\n\r\n// const {\r\n//     currencies,\r\n//     currentCurrency,\r\n//     isBuying,\r\n//     amountOfBYN,\r\n//     amountOfCurrency,\r\n//     ChangeActionAC,\r\n//     ChangeCurrencyFieldAC,\r\n//     ChangeCurrentCurrencyAC\r\n// } = props;\r\n\r\n// const {\r\n//     currencies,\r\n//     currentCurrency,\r\n//     isBuying,\r\n//     amountOfBYN,\r\n//     amountOfCurrency,\r\n// } = props;\r\n\r\nconst CurrencyEContainer: React.FC = () => {\r\n\r\n    const dispatch = useDispatch<Dispatch<CurrencyReducersTypes>>();\r\n\r\n    // const currencies = useSelector(selectCurrencies);\r\n    // const currentCurrency = useSelector(selectCurrentCurrency);\r\n    // const isBuying = useSelector(selectIsBuying);\r\n    // const amountOfBYN = useSelector(selectAmountOfBYN);\r\n    // const amountOfCurrency = useSelector(selectAmountOfCurrency);\r\n\r\n    const {\r\n        currencies,\r\n        currentCurrency,\r\n        isBuying,\r\n        amountOfBYN,\r\n        amountOfCurrency,\r\n    } = useSelector(selectAllStateValues);\r\n\r\n    let currencyRate: number = 0;\r\n    const currenciesName = currencies.map((currency: CurrencyType) => {\r\n        if (currency.currencyName === currentCurrency) {\r\n            currencyRate = isBuying ? currency.buyRate : currency.sellRate;\r\n        }\r\n        return currency.currencyName;\r\n    });\r\n\r\n    const changeCurrencyField = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        let value = e.currentTarget.value;\r\n        if (!isFinite(+value)) return;\r\n        if (e.currentTarget.dataset.currency) {\r\n            const trigger: string = e.currentTarget.dataset.currency;\r\n            if (trigger === 'byn') {\r\n                if (value === '') {\r\n                    // setCurrencyAmount(value, value);\r\n                    // ChangeCurrencyFieldAC(value, value);\r\n                    dispatch(ChangeCurrencyFieldAC(value, value));\r\n                } else {\r\n                    // setCurrencyAmount(value, (+Number(value).toFixed(2) / currencyRate).toFixed(2));\r\n                    //ChangeCurrencyFieldAC(value, (+Number(value).toFixed(2) / currencyRate).toFixed(2));\r\n                    dispatch(ChangeCurrencyFieldAC(value, (+Number(value).toFixed(2) / currencyRate).toFixed(2)));\r\n                }\r\n            } else {\r\n                if (value === '') {\r\n                    // setCurrencyAmount(value, value);\r\n                    // ChangeCurrencyFieldAC(value, value);\r\n                    dispatch(ChangeCurrencyFieldAC(value, value));\r\n                } else {\r\n                    // setCurrencyAmount((+Number(value).toFixed(2) * currencyRate).toFixed(2), value);\r\n                    //ChangeCurrencyFieldAC((+Number(value).toFixed(2) * currencyRate).toFixed(2), value);\r\n                    dispatch(ChangeCurrencyFieldAC((+Number(value).toFixed(2) * currencyRate).toFixed(2), value));\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const changeAction = (e: React.MouseEvent<HTMLSpanElement>) => {\r\n        // e.currentTarget.dataset.action === 'buy' ? setAction(true) : setAction(false);\r\n        //e.currentTarget.dataset.action === 'buy' ? ChangeActionAC(true) : ChangeActionAC(false);\r\n        e.currentTarget.dataset.action === 'buy' ? dispatch(ChangeActionAC(true)) : dispatch(ChangeActionAC(false));\r\n    };\r\n\r\n    const changeCurrentCurrency = (e: React.MouseEvent<HTMLLIElement>) => {\r\n        // e.currentTarget.dataset.currency && changeCurrency(e.currentTarget.dataset.currency);\r\n        //e.currentTarget.dataset.currency && ChangeCurrentCurrencyAC(e.currentTarget.dataset.currency);\r\n        e.currentTarget.dataset.currency && dispatch(ChangeCurrentCurrencyAC(e.currentTarget.dataset.currency));\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CurrencyExchange\r\n                currenciesName={currenciesName}\r\n                currentCurrency={currentCurrency}\r\n                currencyRate={currencyRate}\r\n                isBuying={isBuying}\r\n                amountOfBYN={amountOfBYN}\r\n                amountOfCurrency={amountOfCurrency}\r\n                changeCurrencyField={changeCurrencyField}\r\n                changeAction={changeAction}\r\n                changeCurrentCurrency={changeCurrentCurrency}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\n// const mapStateToProps = ( { currency } : {currency: CurrencyState} ): CurrencyState => {\r\n//     return {\r\n//         currencies: currency.currencies,\r\n//         currentCurrency: currency.currentCurrency,\r\n//         isBuying: currency.isBuying,\r\n//         amountOfBYN: currency.amountOfBYN,\r\n//         amountOfCurrency: currency.amountOfCurrency,\r\n//     };\r\n// };\r\n\r\n\r\n// const mapDispatchToProps = (dispatch: Dispatch<CurrencyReducersTypes>) : any => {\r\n//     return {\r\n//         setCurrencyAmount(amountOfBYN: string, amountOfCurrency: string) {\r\n//             dispatch(ChangeCurrencyFieldAC(amountOfBYN, amountOfCurrency));\r\n//         },\r\n//         setAction(isBuying: boolean) {\r\n//             dispatch(ChangeActionAC(isBuying));\r\n//         },\r\n//         changeCurrency(currency: string) {\r\n//             dispatch(ChangeCurrentCurrencyAC(currency));\r\n//         },\r\n//     };\r\n// };\r\n\r\n\r\n// const connector = connect(mapStateToProps, mapDispatchToProps);\r\n//const connector = connect(mapStateToProps, { ChangeActionAC, ChangeCurrencyFieldAC, ChangeCurrentCurrencyAC });\r\n// const connector = connect(mapStateToProps, {});\r\n//\r\n// type TProps = ConnectedProps<typeof connector>;\r\n//\r\n// export default connector(CurrencyEContainer);\r\n\r\nexport default CurrencyEContainer;\r\n\r\n","D:\\it-incubator\\js_lessons\\src\\App.tsx",["56"],"D:\\it-incubator\\js_lessons\\src\\redux\\currencyReducer.ts",[],"D:\\it-incubator\\js_lessons\\src\\redux\\state.ts",[],"D:\\it-incubator\\js_lessons\\src\\redux\\selectors.ts",[],"D:\\it-incubator\\js_lessons\\src\\lessons\\lesson2\\lesson2.ts",["57"],"D:\\it-incubator\\js_lessons\\src\\lessons\\lesson1\\lesson1.tsx",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":1,"column":9,"nodeType":"64","messageId":"65","endLine":1,"endColumn":13},{"ruleId":"62","severity":1,"message":"66","line":3,"column":10,"nodeType":"64","messageId":"65","endLine":3,"endColumn":23},{"ruleId":"62","severity":1,"message":"67","line":11,"column":10,"nodeType":"64","messageId":"65","endLine":11,"endColumn":17},{"ruleId":"62","severity":1,"message":"68","line":11,"column":19,"nodeType":"64","messageId":"65","endLine":11,"endColumn":33},{"ruleId":"62","severity":1,"message":"69","line":14,"column":5,"nodeType":"64","messageId":"65","endLine":14,"endColumn":22},{"ruleId":"62","severity":1,"message":"70","line":15,"column":5,"nodeType":"64","messageId":"65","endLine":15,"endColumn":27},{"ruleId":"62","severity":1,"message":"71","line":16,"column":5,"nodeType":"64","messageId":"65","endLine":16,"endColumn":21},{"ruleId":"62","severity":1,"message":"72","line":17,"column":5,"nodeType":"64","messageId":"65","endLine":17,"endColumn":26},{"ruleId":"62","severity":1,"message":"73","line":18,"column":5,"nodeType":"64","messageId":"65","endLine":18,"endColumn":19},{"ruleId":"62","severity":1,"message":"74","line":3,"column":8,"nodeType":"64","messageId":"65","endLine":3,"endColumn":15},{"ruleId":"75","severity":1,"message":"76","line":161,"column":1,"nodeType":"77","endLine":162,"endColumn":3},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"@typescript-eslint/no-unused-vars","'type' is defined but never used.","Identifier","unusedVar","'CurrencyState' is defined but never used.","'connect' is defined but never used.","'ConnectedProps' is defined but never used.","'selectAmountOfBYN' is defined but never used.","'selectAmountOfCurrency' is defined but never used.","'selectCurrencies' is defined but never used.","'selectCurrentCurrency' is defined but never used.","'selectIsBuying' is defined but never used.","'Lesson1' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]